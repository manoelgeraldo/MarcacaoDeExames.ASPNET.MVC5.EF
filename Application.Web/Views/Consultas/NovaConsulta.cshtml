@model Shared.ViewModels.ConsultaViewModel

@{
    ViewBag.Title = "Consulta";
}

<h2>Marcação de Consulta</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Paciente.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Paciente.CPF, new { htmlAttributes = new { @class = "cpf form-control" } })
                @*@Html.EditorFor(model => model.Paciente.CPF, new { htmlAttributes = new { @class = "cpf form-control" } })*@
                @Html.ValidationMessageFor(model => model.Paciente.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoExame.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoExameId", string.Empty)
                @*@Html.EditorFor(model => model.TipoExameId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.TipoExame.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exame.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExameId", string.Empty)
                @*@Html.EditorFor(model => model.ExameId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Exame.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataConsulta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HorarioConsulta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HorarioConsulta, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-primary" href=@Url.Action("Index", "Consultas")>Voltar</a>
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymask")
    @Scripts.Render("~/bundles/jqueryui")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#Paciente_CPF").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Consultas/BuscarCPF",
                        type: "POST",
                        dataType: "json",
                        data: { cpf: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Paciente_CPF, value: item.Paciente_CPF };
                            }))
                        }
                    });
                },
                messages: {
                    noResults: "", //results: ""
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' results ') + ' found';
                    }
                }
            });
        })
    </script>
}
