@model Shared.ViewModels.ConsultaViewModel

@{
    ViewBag.Title = "Consulta";
}

<h2>Editar Consulta</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Paciente.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Paciente.CPF, new { htmlAttributes = new { @class = "cpf form-control" } })
                @Html.ValidationMessageFor(model => model.Paciente.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoExame.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.ListaTipos != null)
                {
                    @Html.DropDownListFor(model => model.TipoExameId, ViewBag.ListaTipos as SelectList, "- Selecione -", new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.TipoExame.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exame.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExameId, new SelectList(" "), "- Selecione -", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Exame.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataConsulta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HorarioConsulta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HorarioConsulta, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-primary" href=@Url.Action("Index", "Consultas")>Voltar</a>
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymask")
    @Scripts.Render("~/bundles/jqueryui")

    <script type="text/javascript">
        $(function () {
            $("#PacienteCPF").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Consultas/ListaCPF',
                        data: "{'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item['label'],
                                    pacienteId: item['value']
                                }
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#PacienteId").val(i.item.pacienteId);
                },
                minLength: 1
            });
        });

        $(document).ready(function () {
            $("#TipoExameId").change(function () {
                $.get("/Consultas/ListaExame", { TipoExameId: $("#TipoExameId").val() },
                    function (data) {
                        $("#ExameId").empty();
                        $.each(data, function (index, row) {
                            $("#ExameId").append("<option value='" + row.ExameId + "'>" + row.Nome + "</option>")
                        });
                    });
            })
        });
    </script>
}

